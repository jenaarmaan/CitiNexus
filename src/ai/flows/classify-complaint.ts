// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Auto-classifies a complaint based on the description and routes it to the correct department.
 *
 * - classifyComplaint - A function that handles the complaint classification process.
 * - ClassifyComplaintInput - The input type for the classifyComplaint function.
 * - ClassifyComplaintOutput - The return type for the classifyComplaint function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ClassifyComplaintInputSchema = z.object({
  title: z.string().describe('The title of the complaint.'),
  description: z.string().describe('The detailed description of the complaint.'),
  location: z.string().describe('The location of the complaint (GPS coordinates or address).'),
  photoDataUri: z
    .string()
    .optional()
    .describe(
      "A photo related to the complaint, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  urgencyLevel: z.enum(['Normal', 'Urgent', 'Critical']).describe('The urgency level of the complaint.'),
});
export type ClassifyComplaintInput = z.infer<typeof ClassifyComplaintInputSchema>;

const ClassifyComplaintOutputSchema = z.object({
  department: z
    .string()
    .describe(
      'The department to which the complaint should be routed (e.g., Water, Roads, Electricity).'
    ),
  keywords: z.array(z.string()).describe('Relevant keywords extracted from the complaint description.'),
  summary: z.string().describe('A short summary of the complaint.'),
});
export type ClassifyComplaintOutput = z.infer<typeof ClassifyComplaintOutputSchema>;

export async function classifyComplaint(input: ClassifyComplaintInput): Promise<ClassifyComplaintOutput> {
  return classifyComplaintFlow(input);
}

const classifyComplaintPrompt = ai.definePrompt({
  name: 'classifyComplaintPrompt',
  input: {schema: ClassifyComplaintInputSchema},
  output: {schema: ClassifyComplaintOutputSchema},
  prompt: `You are an AI assistant that classifies citizen complaints and routes them to the appropriate department.

  Analyze the following complaint information to determine the correct department, extract relevant keywords, and summarize the complaint.

  Title: {{{title}}}
  Description: {{{description}}}
  Location: {{{location}}}
  Urgency Level: {{{urgencyLevel}}}
  {{#if photoDataUri}}
  Photo: {{media url=photoDataUri}}
  {{/if}}

  Respond with JSON containing the \"department\", \"keywords\", and \"summary\" fields.  The \"department\" field should be one of the following: Water, Roads, Electricity, Waste Management, Public Safety, or Other.  The \"keywords\" field should be an array of strings.
  `,
});

const classifyComplaintFlow = ai.defineFlow(
  {
    name: 'classifyComplaintFlow',
    inputSchema: ClassifyComplaintInputSchema,
    outputSchema: ClassifyComplaintOutputSchema,
  },
  async input => {
    const {output} = await classifyComplaintPrompt(input);
    return output!;
  }
);
