// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow that suggests a complaint title based on the provided description.
 *
 * - suggestComplaintTitle - A function that accepts a complaint description and returns a suggested title.
 * - SuggestComplaintTitleInput - The input type for the suggestComplaintTitle function.
 * - SuggestComplaintTitleOutput - The return type for the suggestComplaintTitle function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestComplaintTitleInputSchema = z.object({
  description: z.string().describe('The description of the complaint.'),
});
export type SuggestComplaintTitleInput = z.infer<typeof SuggestComplaintTitleInputSchema>;

const SuggestComplaintTitleOutputSchema = z.object({
  title: z.string().describe('A suggested title for the complaint.'),
});
export type SuggestComplaintTitleOutput = z.infer<typeof SuggestComplaintTitleOutputSchema>;

export async function suggestComplaintTitle(input: SuggestComplaintTitleInput): Promise<SuggestComplaintTitleOutput> {
  return suggestComplaintTitleFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestComplaintTitlePrompt',
  input: {schema: SuggestComplaintTitleInputSchema},
  output: {schema: SuggestComplaintTitleOutputSchema},
  prompt: `You are an AI assistant helping citizens to file complaints.
  Based on the description of the complaint provided by the citizen, you will suggest a concise and descriptive title for the complaint.
  The title should accurately reflect the issue described in the description.

  Description: {{{description}}}
  `,
});

const suggestComplaintTitleFlow = ai.defineFlow(
  {
    name: 'suggestComplaintTitleFlow',
    inputSchema: SuggestComplaintTitleInputSchema,
    outputSchema: SuggestComplaintTitleOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
